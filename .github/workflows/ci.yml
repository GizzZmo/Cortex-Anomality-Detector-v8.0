name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint-and-test-backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: backend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./backend
      run: npm ci
    
    - name: Generate Prisma Client
      working-directory: ./backend
      run: npx prisma generate --schema=./db/prisma/schema.prisma
    
    - name: Run tests
      working-directory: ./backend
      run: npm test || echo "No tests configured yet"

  lint-and-test-frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run linter
      working-directory: ./frontend
      run: npm run lint || echo "No linter configured yet"
    
    - name: Run tests
      working-directory: ./frontend
      run: npm test -- --passWithNoTests
    
    - name: Build
      working-directory: ./frontend
      run: npm run build

  test-ai-service:
    name: AI Service Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install dependencies
      working-directory: ./ai_service
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Lint with flake8
      working-directory: ./ai_service
      run: |
        pip install flake8
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics || true
    
    - name: Run tests
      working-directory: ./ai_service
      run: |
        pip install pytest
        pytest || echo "No tests configured yet"

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [lint-and-test-backend, lint-and-test-frontend, test-ai-service]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Frontend
      uses: docker/build-push-action@v4
      with:
        context: ./frontend
        push: false
        tags: cortex-frontend:test
    
    - name: Build Backend
      uses: docker/build-push-action@v4
      with:
        context: ./backend
        push: false
        tags: cortex-backend:test
    
    - name: Build AI Service
      uses: docker/build-push-action@v4
      with:
        context: ./ai_service
        push: false
        tags: cortex-ai:test
    
    - name: Test Docker Compose
      run: |
        docker-compose config
        echo "Docker Compose configuration is valid"
